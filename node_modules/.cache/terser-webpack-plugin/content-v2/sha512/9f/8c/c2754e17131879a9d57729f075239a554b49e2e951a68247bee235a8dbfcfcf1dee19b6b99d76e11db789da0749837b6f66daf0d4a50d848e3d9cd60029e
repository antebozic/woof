{"map":"{\"version\":3,\"sources\":[\"/Users/ante/Documents/projects/memory/src/NavBar.js\",\"/Users/ante/Documents/projects/memory/src/Card.js\",\"/Users/ante/Documents/projects/memory/src/Dog.js\",\"/Users/ante/Documents/projects/memory/src/MemoryGame.js\",\"/Users/ante/Documents/projects/memory/src/index.js\"],\"names\":[\"NavBar\",\"_ref\",\"onNewGame\",\"react_default\",\"a\",\"createElement\",\"onClick\",\"className\",\"id\",\"Card\",\"props\",\"style\",\"showing\",\"backgroundImage\",\"concat\",\"opacity\",\"filter\",\"border\",\"Dog\",\"CardState\",\"HIDDING\",\"SHOWING\",\"MATCHING\",\"MemoryGame\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"cards\",\"cardState\",\"HIDING\",\"backgroundColor\",\"shuffle\",\"state\",\"noClick\",\"isVis\",\"handleClick\",\"bind\",\"assertThisInitialized\",\"handleNewGame\",\"getAllDogs\",\"_this2\",\"dogs\",\"i\",\"axios\",\"get\",\"then\",\"res\",\"push\",\"data\",\"message\",\"catch\",\"err\",\"console\",\"log\",\"setTimeout\",\"map\",\"c\",\"objectSpread\",\"setState\",\"_this3\",\"_this4\",\"mapCardState\",\"idsToChange\",\"newCardState\",\"includes\",\"foundCard\",\"find\",\"showingCards\",\"ids\",\"length\",\"hidingCards\",\"_this5\",\"loadClass\",\"require\",\"classNames\",\"hide\",\"show\",\"card\",\"src_Card_0\",\"key\",\"display\",\"src_NavBar_0\",\"src_Dog_0\",\"Component\",\"ReactDOM\",\"render\",\"MemoryGame_MemoryGame\",\"document\",\"getElementById\"],\"mappings\":\"gWAceA,SAXA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,UAAF,OACXC,EAAAC,EAAAC,cAAA,SAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAAA,IAAA,KAAA,0BACJF,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAIF,EAAAC,EAAAC,cAAA,IAAA,CAAGC,QAASJ,EAAWK,UAAU,MAAMC,GAAG,SAA1C,iBCqBDC,SAxBF,SAACC,GACV,IAAIC,EAAQ,GASZ,OARID,EAAME,UACND,EAAME,gBAAN,OAAAC,OAA+BJ,EAAMG,gBAArC,MAEAH,EAAMK,UACNJ,EAAMK,OAAS,kBACfL,EAAMM,OAAS,oBACfN,EAAMI,QAAU,MAGhBZ,EAAAC,EAAAC,cAAA,MAAA,CACIC,QAASI,EAAMJ,QACfC,UAAU,iBAAiBI,MAAOA,MCsB/BO,SApCH,SAACR,GACT,OACIP,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,MACrBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,GAAG,OACNL,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,kBACZJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAChBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAElBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAGhBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAEjBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,UAEjBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,oBAEjBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,eAGnBJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,yCCtBXY,EAAY,CACdC,QAAS,EACTC,QAAS,EACTC,SAAU,GAGOC,cACjB,SAAAA,EAAYb,GAAO,IAAAc,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMjB,IAIN,IAAIqB,EAAQ,CACR,CAACvB,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,MAAOrB,gBAAiB,IAC9E,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,MAAOrB,gBAAiB,IAC9E,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,OAAQrB,gBAAiB,IAC/E,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,OAAQrB,gBAAiB,IAC/E,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,SAAUrB,gBAAiB,IACjF,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,SAAUrB,gBAAiB,IACjF,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IAChF,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IAChF,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IAChF,CAACL,GAAI,EAAGwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IAChF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,SAAUrB,gBAAiB,IAClF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,SAAUrB,gBAAiB,IAClF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,OAAQrB,gBAAiB,IAChF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,OAAQrB,gBAAiB,IAChF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,WAAYrB,gBAAiB,IACpF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,WAAYrB,gBAAiB,IACpF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IACjF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IACjF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,IACjF,CAACL,GAAI,GAAIwB,UAAWb,EAAUc,OAAQC,gBAAiB,QAASrB,gBAAiB,KAzBtE,OA4BfkB,EAAQI,GAAAA,CAAQJ,GAEhBP,EAAKY,MAAQ,CACTL,MAAAA,EAAOM,SAAS,EAAOC,OAAO,GAGlCd,EAAKe,YAAcf,EAAKe,YAAYC,KAAjBf,OAAAgB,EAAA,EAAAhB,CAAAA,OAAAgB,EAAA,EAAAhB,CAAAD,KACnBA,EAAKkB,cAAgBlB,EAAKkB,cAAcF,KAAnBf,OAAAgB,EAAA,EAAAhB,CAAAA,OAAAgB,EAAA,EAAAhB,CAAAD,KACrBA,EAAKmB,WAAanB,EAAKmB,WAAWH,KAAhBf,OAAAgB,EAAA,EAAAhB,CAAAA,OAAAgB,EAAA,EAAAhB,CAAAD,KApCHA,4EAyCf,IAFS,IAAAoB,EAAAjB,KACLkB,EAAO,GACHC,EAAE,EAAGA,EAAE,GAAIA,IACfC,EAAAA,EACCC,IAAI,2CACJC,KAAM,SAAAC,GAAG,OAAIL,EAAKM,KAAKD,EAAIE,KAAKC,WAChCC,MAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAE/BG,WACE,WACE,IAAI3B,EAAQa,EAAKR,MAAML,MAAM4B,IAAK,SAAAC,GAE9B,OAAOA,EAAE1B,iBAEL,IAAK,MACL,OAAOT,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,OACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,SACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,QACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,QACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,SACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,OACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,WACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,QACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,IAAK,QACL,OAAOpB,OAAAoC,EAAA,EAAApC,CAAA,GAAImC,EAAX,CAAc/C,gBAAiBgC,EAAK,KAEpC,QACA,OAAOe,KAIfhB,EAAKkB,SAAS,CAAC/B,MAAAA,EAAOO,OAAO,KAC5B,kDAKLX,KAAKgB,qDAGO,IAAAoB,EAAApC,KAGZA,KAAKmC,SAAS,CAACxB,OAAO,IACtBoB,WAAW,WACPK,EAAKD,SAAS,CAACxB,OAAO,KACvB,KACH,IAAIP,EAAQJ,KAAKS,MAAML,MAAM4B,IAAI,SAAAC,GAAC,OAAAnC,OAAAoC,EAAA,EAAApC,CAAA,GAC3BmC,EAD2B,CAE9B5B,UAAWb,EAAUc,WAGzBF,EAAQI,GAAAA,CAAQJ,GAEhBJ,KAAKmC,SAAS,CAAC/B,MAAAA,IAEfJ,KAAKgB,iDAIGnC,GAAI,IAAAwD,EAAArC,KAINsC,EAAe,SAAClC,EAAOmC,EAAaC,GACtC,OAAOpC,EAAM4B,IAAI,SAAAC,GACb,OAAIM,EAAYE,SAASR,EAAEpD,IAChBiB,OAAAoC,EAAA,EAAApC,CAAA,GACAmC,EADP,CAEI5B,UAAWmC,IAGZP,KAKTS,EAAY1C,KAAKS,MAAML,MAAMuC,KAAK,SAAAV,GAAC,OAAIA,EAAEpD,KAAOA,IAGtD,IAAGmB,KAAKS,MAAMC,SAAWgC,EAAUrC,YAAcb,EAAUc,OAA3D,CAIA,IAAII,GAAU,EAGVN,EAAQkC,EAAatC,KAAKS,MAAML,MAAO,CAACvB,GAAKW,EAAUE,SAGrDkD,EAAexC,EAAMf,OAAO,SAAA4C,GAAC,OAAIA,EAAE5B,YAAcb,EAAUE,UAG3DmD,EAAMD,EAAaZ,IAAI,SAAAC,GAAC,OAAIA,EAAEpD,KAGpC,GAA4B,IAAxB+D,EAAaE,QACbF,EAAa,GAAGrC,kBAAoBqC,EAAa,GAAGrC,gBAChDH,EAAQkC,EAAatC,KAAKS,MAAML,MAAOyC,EAAKrD,EAAUG,eAEzD,GAA4B,IAAxBiD,EAAaE,OAAc,CACjC,IAAIC,EAAcT,EAAatC,KAAKS,MAAML,MAAOyC,EAAKrD,EAAUc,QAE/DI,GAAU,EAEVV,KAAKmC,SAAS,CAAC/B,MAAAA,EAAOM,QAAAA,GAAU,WAC5BqB,WAAW,WAEPM,EAAKF,SAAS,CAAC/B,MAAO2C,EAAarC,SAAS,KAC7C,QAIXV,KAAKmC,SAAS,CAAC/B,MAAAA,EAAOM,QAAAA,sCAKjB,IAAAsC,EAAAhD,KAEDiD,EADaC,EAAQ,GACTC,CACZ,OAAO,CACHC,MAASpD,KAAKS,MAAME,MACpB0C,KAASrD,KAAKS,MAAME,QAGtBP,EAAQJ,KAAKS,MAAML,MAAM4B,IAAI,SAACsB,GAAD,OAC/B9E,EAAAC,EAAAC,cAAC6E,EAAD,CACIC,IAAKF,EAAKzE,GACVO,QAASkE,EAAKjD,YAAcb,EAAUG,SACtCV,QAASqE,EAAKjD,YAAcb,EAAUc,OACtCC,gBAAiB+C,EAAK/C,gBACtBrB,gBAAiBoE,EAAKpE,gBACtBP,QAAS,WAAA,OAAMqE,EAAKpC,YAAY0C,EAAKzE,SAKzCG,EAAQ,GAQZ,OAPKgB,KAAKS,MAAME,MAGRX,KAAKS,MAAME,QACf3B,EAAMyE,QAAU,QAHhBzE,EAAMyE,QAAU,OAOhBjF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACgF,EAAD,CAAQnF,UAAWyB,KAAKe,gBACxBvC,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,iBAAiBI,MAAOA,GACtCoB,IAGD5B,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAWqE,GAChBzE,EAAAC,EAAAC,cAACiF,EAAD,eArNwBC,EAAAA,WCTxCC,EAAAA,EAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MACXC,SAASC,eAAe\",\"sourcesContent\":[\"import React from 'react';\\nimport './NavBar.css';\\n\\nconst NavBar = ({onNewGame}) => (\\n    <header>\\n        <h2><a>Woof Woof Memory Game</a></h2>\\n        <nav>\\n            <li><a onClick={onNewGame} className=\\\"btn\\\" id=\\\"slide\\\">New Game</a></li>\\n        </nav>\\n    </header>\\n);\\n\\n\\n\\nexport default NavBar;\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport './Card.css'\\n\\nconst Card = (props) => {\\n    let style = {};\\n    if (props.showing) {\\n        style.backgroundImage = `url(${props.backgroundImage})`\\n    }\\n    if (props.opacity) {\\n        style.filter = 'grayscale(100%)'\\n        style.border = '.18rem solid #000'\\n        style.opacity = '.8'\\n    } \\n    return (\\n        <div \\n            onClick={props.onClick}\\n            className=\\\"card-container\\\" style={style} \\n        >\\n        </div>\\n    )\\n};\\n\\nCard.propTypes = {\\n    showing: PropTypes.bool.isRequired,\\n    onClick: PropTypes.func.isRequired\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport './Dog.css';\\n\\nconst Dog = (props) => {\\n    return (\\n        <div className=\\\"bg\\\">\\n  <div id=\\\"dog\\\">\\n    <div className=\\\"head\\\">\\n      <div className=\\\"mask mask-head\\\">\\n         <div className=\\\"nose\\\"></div>\\n        <div className=\\\"eye\\\"></div>\\n      </div>\\n     <div className=\\\"ear\\\"></div>\\n    </div>\\n      \\n    <div className=\\\"body\\\">\\n      <div className=\\\"shirt\\\"></div>\\n      <div className=\\\"mask-body\\\">\\n        <div className=\\\"leg\\\"></div>\\n      </div>\\n      <div className=\\\"foot\\\"></div>\\n    </div>\\n    <div className=\\\"back-body\\\">\\n      <div className=\\\"mask-back-body\\\"></div>\\n    </div>\\n    <div className=\\\"mask-tail\\\"></div>\\n    </div>\\n\\n<div className=\\\"spinner\\\">\\n  <div className=\\\"bounce1\\\"></div>\\n  <div className=\\\"bounce2\\\"></div>\\n  <div className=\\\"bounce3\\\"></div>\\n</div>\\n\\n  </div>\\n\\n    )\\n}\\n\\nexport default Dog;\",\"import React, {Component} from 'react';\\nimport shuffle from 'shuffle-array';\\nimport NavBar from './NavBar';\\nimport Card from './Card';\\nimport Dog from './Dog';\\nimport './MemoryGame.css';\\nimport axios from 'axios';\\n\\n\\nconst CardState = {\\n    HIDDING: 0,\\n    SHOWING: 1, \\n    MATCHING: 2\\n}\\n\\nexport default class MemoryGame extends Component {\\n    constructor(props) {\\n        super(props);\\n\\n\\n        //the cards I'm using for my state\\n        let cards = [\\n            {id: 0, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: ''},\\n            {id: 1, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: ''},\\n            {id: 2, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: ''},\\n            {id: 3, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: ''},\\n            {id: 4, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: ''},\\n            {id: 5, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: ''},\\n            {id: 6, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: ''},\\n            {id: 7, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: ''},\\n            {id: 8, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: ''},\\n            {id: 9, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: ''},\\n            {id: 10, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: ''},\\n            {id: 11, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: ''},\\n            {id: 12, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: ''},\\n            {id: 13, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: ''},\\n            {id: 14, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: ''},\\n            {id: 15, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: ''}, \\n            {id: 16, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: ''},\\n            {id: 17, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: ''},\\n            {id: 18, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: ''},\\n            {id: 19, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: ''}\\n        ];\\n\\n        cards = shuffle(cards);\\n\\n        this.state = {\\n            cards, noClick: false, isVis: true\\n        };\\n\\n        this.handleClick = this.handleClick.bind(this);\\n        this.handleNewGame = this.handleNewGame.bind(this);\\n        this.getAllDogs = this.getAllDogs.bind(this);\\n    }\\n\\n    getAllDogs() {\\n        let dogs = []\\n        for(let i=0; i<10; i++) {\\n            axios\\n            .get('https://dog.ceo/api/breeds/image/random')\\n            .then( res => dogs.push(res.data.message))\\n            .catch( err => console.log(err))\\n        }\\n        setTimeout(\\n          () => {\\n            let cards = this.state.cards.map( c => {\\n\\n                switch(c.backgroundColor) {\\n\\n                    case \\\"red\\\":\\n                    return {...c, backgroundImage: dogs[0]};\\n\\n                    case \\\"navy\\\":\\n                    return {...c, backgroundImage: dogs[1]};\\n\\n                    case \\\"yellow\\\":\\n                    return {...c, backgroundImage: dogs[2]};\\n\\n                    case \\\"green\\\":\\n                    return {...c, backgroundImage: dogs[3]};\\n\\n                    case \\\"black\\\":\\n                    return {...c, backgroundImage: dogs[4]};\\n\\n                    case \\\"purple\\\":\\n                    return {...c, backgroundImage: dogs[5]};\\n\\n                    case \\\"pink\\\":\\n                    return {...c, backgroundImage: dogs[6]};\\n\\n                    case \\\"lightsky\\\":\\n                    return {...c, backgroundImage: dogs[7]};\\n\\n                    case \\\"brown\\\":\\n                    return {...c, backgroundImage: dogs[8]};\\n\\n                    case \\\"white\\\":\\n                    return {...c, backgroundImage: dogs[9]};\\n\\n                    default: \\n                    return c;\\n\\n                }\\n        })\\n            this.setState({cards, isVis: false})\\n          }, 8000\\n        )\\n    }\\n\\n    componentWillMount() {\\n        this.getAllDogs();\\n    }\\n\\n    handleNewGame() {\\n        // 1.copy all state and set all cards to state of hiding\\n        // 2.shuffle the cards\\n        this.setState({isVis: true})\\n        setTimeout(() => {\\n            this.setState({isVis: false})\\n        }, 8000)\\n        let cards = this.state.cards.map(c => ({\\n            ...c,\\n            cardState: CardState.HIDING\\n        }));\\n\\n        cards = shuffle(cards);\\n\\n        this.setState({cards});\\n\\n        this.getAllDogs();\\n\\n    }\\n\\n    handleClick(id) {\\n        // 1.if two cards are visible and they don't match, put back\\n        // 2.if two cards are visible and they match, they should stay\\n\\n        const mapCardState = (cards, idsToChange, newCardState) => {\\n            return cards.map(c => {\\n                if (idsToChange.includes(c.id)) {\\n                    return {\\n                        ...c, \\n                        cardState: newCardState\\n                    };\\n                }\\n                return c;\\n            });\\n        }\\n        //grabbing the card we want out of the array\\n\\n        const foundCard = this.state.cards.find(c => c.id === id);\\n\\n        //prevents flipping card if it's noClick || matching || showing\\n        if(this.state.noClick || foundCard.cardState !== CardState.HIDING) {\\n            return;\\n        }\\n\\n        let noClick = false;\\n\\n        //filters all cards, but one that's clicke has SHOWING now\\n        let cards = mapCardState(this.state.cards, [id], CardState.SHOWING);\\n\\n        //finds only cards with SHOWING\\n        const showingCards = cards.filter(c => c.cardState === CardState.SHOWING);\\n    \\n        //grabbing ids from showingCards\\n        const ids = showingCards.map(c => c.id);\\n\\n\\n        if (showingCards.length === 2 && \\n            showingCards[0].backgroundColor === showingCards[1].backgroundColor) {\\n                cards = mapCardState(this.state.cards, ids, CardState.MATCHING);  \\n            } \\n        else if (showingCards.length === 2) {\\n           let hidingCards = mapCardState(this.state.cards, ids, CardState.HIDING);\\n                \\n            noClick = true;\\n\\n            this.setState({cards, noClick}, () => {\\n                setTimeout(() => {\\n                    // set the state of the cards to HIDING after 1.5 seconds\\n                    this.setState({cards: hidingCards, noClick: false});\\n                }, 1500);\\n            }\\n            );   \\n        }\\n        this.setState({cards, noClick});\\n    }\\n\\n\\n    \\n    render() {\\n        var classNames = require('classnames');\\n        var loadClass = classNames(\\n            \\\"load\\\",{\\n                \\\"hide\\\": !this.state.isVis, \\n                \\\"show\\\" : this.state.isVis\\n            }\\n        )\\n        const cards = this.state.cards.map((card) => (\\n            <Card \\n                key={card.id} \\n                opacity={card.cardState === CardState.MATCHING}\\n                showing={card.cardState !== CardState.HIDING} \\n                backgroundColor={card.backgroundColor} \\n                backgroundImage={card.backgroundImage}\\n                onClick={() => this.handleClick(card.id)}\\n            />\\n        ));\\n\\n\\n        let style = {};\\n        if (!this.state.isVis) {\\n            style.display = 'grid'\\n        }\\n        else if(this.state.isVis) {\\n            style.display = 'none'\\n        }\\n\\n        return (\\n            <div className=\\\"container\\\">\\n                <NavBar onNewGame={this.handleNewGame}/>\\n                <div className=\\\"content\\\">\\n                <div className=\\\"cardsContainer\\\" style={style}>\\n                {cards}\\n                </div>\\n                </div>\\n                <div className={loadClass}>\\n                <Dog />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport MemoryGame from './MemoryGame';\\n\\n\\nReactDOM.render(<MemoryGame />,\\n     document.getElementById('root')\\n);\\n\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{19:function(e,a,t){e.exports=t(54)},24:function(e,a,t){},26:function(e,a,t){},28:function(e,a,t){},30:function(e,a,t){},32:function(e,a,t){},54:function(e,a,t){\"use strict\";t.r(a);var n=t(0),c=t.n(n),r=t(12),o=t.n(r),d=(t(24),t(1)),i=t(13),s=t(14),l=t(17),u=t(15),g=t(18),m=t(3),b=t(5),k=t.n(b),I=(t(26),function(e){var a=e.onNewGame;return c.a.createElement(\"header\",null,c.a.createElement(\"h2\",null,c.a.createElement(\"a\",null,\"Woof Woof Memory Game\")),c.a.createElement(\"nav\",null,c.a.createElement(\"li\",null,c.a.createElement(\"a\",{onClick:a,className:\"btn\",id:\"slide\"},\"New Game\"))))}),N=(t(28),function(e){var a={};return e.showing&&(a.backgroundImage=\"url(\".concat(e.backgroundImage,\")\")),e.opacity&&(a.filter=\"grayscale(100%)\",a.border=\".18rem solid #000\",a.opacity=\".8\"),c.a.createElement(\"div\",{onClick:e.onClick,className:\"card-container\",style:a})}),h=(t(30),function(e){return c.a.createElement(\"div\",{className:\"bg\"},c.a.createElement(\"div\",{id:\"dog\"},c.a.createElement(\"div\",{className:\"head\"},c.a.createElement(\"div\",{className:\"mask mask-head\"},c.a.createElement(\"div\",{className:\"nose\"}),c.a.createElement(\"div\",{className:\"eye\"})),c.a.createElement(\"div\",{className:\"ear\"})),c.a.createElement(\"div\",{className:\"body\"},c.a.createElement(\"div\",{className:\"shirt\"}),c.a.createElement(\"div\",{className:\"mask-body\"},c.a.createElement(\"div\",{className:\"leg\"})),c.a.createElement(\"div\",{className:\"foot\"})),c.a.createElement(\"div\",{className:\"back-body\"},c.a.createElement(\"div\",{className:\"mask-back-body\"})),c.a.createElement(\"div\",{className:\"mask-tail\"})),c.a.createElement(\"div\",{className:\"spinner\"},c.a.createElement(\"div\",{className:\"bounce1\"}),c.a.createElement(\"div\",{className:\"bounce2\"}),c.a.createElement(\"div\",{className:\"bounce3\"})))}),v=(t(32),t(16)),f=t.n(v),C={HIDDING:0,SHOWING:1,MATCHING:2},G=function(e){function a(e){var t;Object(i.a)(this,a),t=Object(l.a)(this,Object(u.a)(a).call(this,e));var n=[{id:0,cardState:C.HIDING,backgroundColor:\"red\",backgroundImage:\"\"},{id:1,cardState:C.HIDING,backgroundColor:\"red\",backgroundImage:\"\"},{id:2,cardState:C.HIDING,backgroundColor:\"navy\",backgroundImage:\"\"},{id:3,cardState:C.HIDING,backgroundColor:\"navy\",backgroundImage:\"\"},{id:4,cardState:C.HIDING,backgroundColor:\"yellow\",backgroundImage:\"\"},{id:5,cardState:C.HIDING,backgroundColor:\"yellow\",backgroundImage:\"\"},{id:6,cardState:C.HIDING,backgroundColor:\"green\",backgroundImage:\"\"},{id:7,cardState:C.HIDING,backgroundColor:\"green\",backgroundImage:\"\"},{id:8,cardState:C.HIDING,backgroundColor:\"black\",backgroundImage:\"\"},{id:9,cardState:C.HIDING,backgroundColor:\"black\",backgroundImage:\"\"},{id:10,cardState:C.HIDING,backgroundColor:\"purple\",backgroundImage:\"\"},{id:11,cardState:C.HIDING,backgroundColor:\"purple\",backgroundImage:\"\"},{id:12,cardState:C.HIDING,backgroundColor:\"pink\",backgroundImage:\"\"},{id:13,cardState:C.HIDING,backgroundColor:\"pink\",backgroundImage:\"\"},{id:14,cardState:C.HIDING,backgroundColor:\"lightsky\",backgroundImage:\"\"},{id:15,cardState:C.HIDING,backgroundColor:\"lightsky\",backgroundImage:\"\"},{id:16,cardState:C.HIDING,backgroundColor:\"brown\",backgroundImage:\"\"},{id:17,cardState:C.HIDING,backgroundColor:\"brown\",backgroundImage:\"\"},{id:18,cardState:C.HIDING,backgroundColor:\"white\",backgroundImage:\"\"},{id:19,cardState:C.HIDING,backgroundColor:\"white\",backgroundImage:\"\"}];return n=k()(n),t.state={cards:n,noClick:!1,isVis:!0},t.handleClick=t.handleClick.bind(Object(m.a)(Object(m.a)(t))),t.handleNewGame=t.handleNewGame.bind(Object(m.a)(Object(m.a)(t))),t.getAllDogs=t.getAllDogs.bind(Object(m.a)(Object(m.a)(t))),t}return Object(g.a)(a,e),Object(s.a)(a,[{key:\"getAllDogs\",value:function(){for(var e=this,a=[],t=0;t<10;t++)f.a.get(\"https://dog.ceo/api/breeds/image/random\").then(function(e){return a.push(e.data.message)}).catch(function(e){return console.log(e)});setTimeout(function(){var t=e.state.cards.map(function(e){switch(e.backgroundColor){case\"red\":return Object(d.a)({},e,{backgroundImage:a[0]});case\"navy\":return Object(d.a)({},e,{backgroundImage:a[1]});case\"yellow\":return Object(d.a)({},e,{backgroundImage:a[2]});case\"green\":return Object(d.a)({},e,{backgroundImage:a[3]});case\"black\":return Object(d.a)({},e,{backgroundImage:a[4]});case\"purple\":return Object(d.a)({},e,{backgroundImage:a[5]});case\"pink\":return Object(d.a)({},e,{backgroundImage:a[6]});case\"lightsky\":return Object(d.a)({},e,{backgroundImage:a[7]});case\"brown\":return Object(d.a)({},e,{backgroundImage:a[8]});case\"white\":return Object(d.a)({},e,{backgroundImage:a[9]});default:return e}});e.setState({cards:t,isVis:!1})},8e3)}},{key:\"componentWillMount\",value:function(){this.getAllDogs()}},{key:\"handleNewGame\",value:function(){var e=this;this.setState({isVis:!0}),setTimeout(function(){e.setState({isVis:!1})},8e3);var a=this.state.cards.map(function(e){return Object(d.a)({},e,{cardState:C.HIDING})});a=k()(a),this.setState({cards:a}),this.getAllDogs()}},{key:\"handleClick\",value:function(e){var a=this,t=function(e,a,t){return e.map(function(e){return a.includes(e.id)?Object(d.a)({},e,{cardState:t}):e})},n=this.state.cards.find(function(a){return a.id===e});if(!this.state.noClick&&n.cardState===C.HIDING){var c=!1,r=t(this.state.cards,[e],C.SHOWING),o=r.filter(function(e){return e.cardState===C.SHOWING}),i=o.map(function(e){return e.id});if(2===o.length&&o[0].backgroundColor===o[1].backgroundColor)r=t(this.state.cards,i,C.MATCHING);else if(2===o.length){var s=t(this.state.cards,i,C.HIDING);c=!0,this.setState({cards:r,noClick:c},function(){setTimeout(function(){a.setState({cards:s,noClick:!1})},1500)})}this.setState({cards:r,noClick:c})}}},{key:\"render\",value:function(){var e=this,a=t(53)(\"load\",{hide:!this.state.isVis,show:this.state.isVis}),n=this.state.cards.map(function(a){return c.a.createElement(N,{key:a.id,opacity:a.cardState===C.MATCHING,showing:a.cardState!==C.HIDING,backgroundColor:a.backgroundColor,backgroundImage:a.backgroundImage,onClick:function(){return e.handleClick(a.id)}})}),r={};return this.state.isVis?this.state.isVis&&(r.display=\"none\"):r.display=\"grid\",c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(I,{onNewGame:this.handleNewGame}),c.a.createElement(\"div\",{className:\"content\"},c.a.createElement(\"div\",{className:\"cardsContainer\",style:r},n)),c.a.createElement(\"div\",{className:a},c.a.createElement(h,null)))}}]),a}(n.Component);o.a.render(c.a.createElement(G,null),document.getElementById(\"root\"))}},[[19,2,1]]]);","extractedComments":[]}