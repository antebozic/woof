{"ast":null,"code":"import _objectSpread from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ante/Documents/projects/memory/src/MemoryGame.js\";\nimport React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Card from './Card';\nimport Dog from './Dog';\nimport './MemoryGame.css';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Offline, Online } from 'react-detect-offline';\nvar CardState = {\n  HIDDING: 0,\n  SHOWING: 1,\n  MATCHING: 2\n};\n\nvar MemoryGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemoryGame, _Component);\n\n  function MemoryGame(props) {\n    var _this;\n\n    _classCallCheck(this, MemoryGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemoryGame).call(this, props)); //the cards I'm using for my state\n\n    var cards = [{\n      id: 0,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red',\n      backgroundImage: ''\n    }, {\n      id: 1,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red',\n      backgroundImage: ''\n    }, {\n      id: 2,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy',\n      backgroundImage: ''\n    }, {\n      id: 3,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy',\n      backgroundImage: ''\n    }, {\n      id: 4,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow',\n      backgroundImage: ''\n    }, {\n      id: 5,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow',\n      backgroundImage: ''\n    }, {\n      id: 6,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green',\n      backgroundImage: ''\n    }, {\n      id: 7,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green',\n      backgroundImage: ''\n    }, {\n      id: 8,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black',\n      backgroundImage: ''\n    }, {\n      id: 9,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black',\n      backgroundImage: ''\n    }, {\n      id: 10,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple',\n      backgroundImage: ''\n    }, {\n      id: 11,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple',\n      backgroundImage: ''\n    }, {\n      id: 12,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink',\n      backgroundImage: ''\n    }, {\n      id: 13,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink',\n      backgroundImage: ''\n    }, {\n      id: 14,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightsky',\n      backgroundImage: ''\n    }, {\n      id: 15,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightsky',\n      backgroundImage: ''\n    }, {\n      id: 16,\n      cardState: CardState.HIDING,\n      backgroundColor: 'brown',\n      backgroundImage: ''\n    }, {\n      id: 17,\n      cardState: CardState.HIDING,\n      backgroundColor: 'brown',\n      backgroundImage: ''\n    }, {\n      id: 18,\n      cardState: CardState.HIDING,\n      backgroundColor: 'white',\n      backgroundImage: ''\n    }, {\n      id: 19,\n      cardState: CardState.HIDING,\n      backgroundColor: 'white',\n      backgroundImage: ''\n    }];\n    cards = _this.shuffle(cards);\n    _this.state = {\n      cards: cards,\n      noClick: false,\n      isVis: true,\n      isFin: false,\n      width: 0,\n      timestart: undefined,\n      attempts: undefined,\n      duration: undefined,\n      click: 0,\n      isMob: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleNewGame = _this.handleNewGame.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllDogs = _this.getAllDogs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.shuffle = _this.shuffle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatedWindowDimensions = _this.updatedWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mobileCheck = _this.mobileCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MemoryGame, [{\n    key: \"mobileCheck\",\n    value: function mobileCheck() {\n      if (typeof window.orientation !== 'undefined') {\n        this.setState({\n          isMob: true\n        });\n      }\n    }\n  }, {\n    key: \"updatedWindowDimensions\",\n    value: function updatedWindowDimensions() {\n      if (window.innerWidth < 520) {\n        var cards = this.state.cards.filter(function (c) {\n          return c.backgroundColor !== 'white';\n        });\n        this.setState({\n          cards: cards,\n          width: window.innerWidth\n        });\n      } else if (window.innerWidth > 520 && this.state.cards.length !== 20) {\n        var _cards = this.state.cards;\n\n        _cards.push({\n          id: 18,\n          cardState: CardState.HIDING,\n          backgroundColor: 'white',\n          backgroundImage: ''\n        }, {\n          id: 19,\n          cardState: CardState.HIDING,\n          backgroundColor: 'white',\n          backgroundImage: ''\n        });\n\n        this.setState({\n          cards: _cards,\n          width: window.innerWidth\n        });\n      }\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(arr) {\n      var i, j, temp;\n\n      for (i = arr.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"getAllDogs\",\n    value: function getAllDogs() {\n      var _this2 = this;\n\n      var dogs = [];\n\n      for (var i = 0; i < 10; i++) {\n        fetch('https://dog.ceo/api/breeds/image/random').then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          return dogs.push(res.message);\n        });\n      }\n\n      setTimeout(function () {\n        var cards = _this2.state.cards.map(function (c) {\n          switch (c.backgroundColor) {\n            case 'red':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[0]\n              });\n\n            case 'navy':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[1]\n              });\n\n            case 'yellow':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[2]\n              });\n\n            case 'green':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[3]\n              });\n\n            case 'black':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[4]\n              });\n\n            case 'purple':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[5]\n              });\n\n            case 'pink':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[6]\n              });\n\n            case 'lightsky':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[7]\n              });\n\n            case 'brown':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[8]\n              });\n\n            case 'white':\n              return _objectSpread({}, c, {\n                backgroundImage: dogs[9]\n              });\n\n            default:\n              return c;\n          }\n        });\n\n        _this2.setState({\n          cards: cards,\n          isVis: false\n        });\n      }, 3000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mobileCheck();\n      this.getAllDogs();\n      this.updatedWindowDimensions();\n      window.addEventListener('resize', this.updatedWindowDimensions);\n    }\n  }, {\n    key: \"handleNewGame\",\n    value: function handleNewGame() {\n      var _this3 = this;\n\n      // 1.copy all state and set all cards to state of hiding\n      // 2.shuffle the cards\n      this.setState({\n        isVis: true\n      });\n      setTimeout(function () {\n        _this3.setState({\n          isVis: false\n        });\n      }, 3000);\n      var cards = this.state.cards.map(function (c) {\n        return _objectSpread({}, c, {\n          cardState: CardState.HIDING\n        });\n      });\n      cards = this.shuffle(cards);\n      this.setState({\n        cards: cards,\n        timestart: undefined,\n        isFin: false,\n        duration: undefined,\n        attempts: undefined,\n        click: 0\n      });\n      this.getAllDogs();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      var _this4 = this;\n\n      // console.log(Math.round(new Date().getTime()/1000))\n      //adding click\n      this.setState(function (prevState, props) {\n        return {\n          click: prevState.click + 1\n        };\n      }); //adding first clikc timestamp\n\n      if (this.state.click === 1) {\n        this.setState({\n          timestart: Math.round(new Date().getTime() / 1000)\n        });\n      } // 1.if two cards are visible and they don't match, put back\n      // 2.if two cards are visible and they match, they should stay\n\n\n      var mapCardState = function mapCardState(cards, idsToChange, newCardState) {\n        return cards.map(function (c) {\n          if (idsToChange.includes(c.id)) {\n            return _objectSpread({}, c, {\n              cardState: newCardState\n            });\n          }\n\n          return c;\n        });\n      }; //grabbing the card we want out of the array\n\n\n      var foundCard = this.state.cards.find(function (c) {\n        return c.id === id;\n      }); //prevents flipping card if it's noClick || matching || showing\n\n      if (this.state.noClick || foundCard.cardState !== CardState.HIDING) {\n        return;\n      }\n\n      var noClick = false; //filters all cards, but one that's clicke has SHOWING now\n\n      var cards = mapCardState(this.state.cards, [id], CardState.SHOWING); //finds only cards with SHOWING\n\n      var showingCards = cards.filter(function (c) {\n        return c.cardState === CardState.SHOWING;\n      }); //grabbing ids from showingCards\n\n      var ids = showingCards.map(function (c) {\n        return c.id;\n      });\n\n      if (showingCards.length === 2 && showingCards[0].backgroundColor === showingCards[1].backgroundColor) {\n        cards = mapCardState(this.state.cards, ids, CardState.MATCHING);\n      } else if (showingCards.length === 2) {\n        var hidingCards = mapCardState(this.state.cards, ids, CardState.HIDING);\n        noClick = true;\n        this.setState({\n          cards: cards,\n          noClick: noClick\n        }, function () {\n          setTimeout(function () {\n            // set the state of the cards to HIDING after 1.5 seconds\n            _this4.setState({\n              cards: hidingCards,\n              noClick: false\n            });\n          }, 1200);\n        });\n      } //check for the game end\n\n\n      var allMatching = cards.filter(function (c) {\n        return c.cardState === CardState.MATCHING;\n      });\n\n      if (allMatching.length === cards.length) {\n        var duration = Math.round(new Date().getTime() / 1000) - this.state.timestart;\n        var attempts = Math.round(this.state.click / 2);\n        this.setState({\n          duration: duration,\n          attempts: attempts,\n          isFin: true\n        }, function () {\n          console.log(_this4.state.duration);\n          console.log(_this4.state.attempts);\n        });\n      }\n\n      this.setState({\n        cards: cards,\n        noClick: noClick\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var classNames = require('classnames');\n\n      var loadClass = classNames('load', {\n        hide: !this.state.isVis,\n        show: this.state.isVis\n      });\n      var warClass = classNames({\n        hideWar: !this.state.isMob,\n        showWar: this.state.isMob\n      });\n      var cards = this.state.cards.map(function (card) {\n        return React.createElement(Card, {\n          key: card.id,\n          opacity: card.cardState === CardState.MATCHING,\n          showing: card.cardState !== CardState.HIDING,\n          backgroundColor: card.backgroundColor,\n          backgroundImage: card.backgroundImage,\n          onClick: function onClick() {\n            return _this5.handleClick(card.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        });\n      });\n      var style = {};\n\n      if (!this.state.isVis) {\n        style.display = 'grid';\n      } else if (this.state.isVis) {\n        style.display = 'none';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        onNewGame: this.handleNewGame,\n        isFin: this.state.isFin,\n        duration: this.state.duration,\n        attempts: this.state.attempts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardsContainer\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, cards)), React.createElement(\"div\", {\n        className: loadClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(ReactCSSTransitionGroup, {\n        transitionName: \"todo\",\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        transitionEnterTimeout: 500,\n        transitionLeaveTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Dog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: warClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Turn device in portrait mode\", React.createElement(\"span\", {\n        className: \"exc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"!\"), \" Woof\", React.createElement(\"span\", {\n        className: \"exc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"!\"))), React.createElement(Offline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"showConn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"There is a problem with your internet connection\", React.createElement(\"span\", {\n        className: \"exc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"!\"), \" Woof\", React.createElement(\"span\", {\n        className: \"exc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"!\")))));\n    }\n  }]);\n\n  return MemoryGame;\n}(Component);\n\nexport { MemoryGame as default };","map":{"version":3,"sources":["/Users/ante/Documents/projects/memory/src/MemoryGame.js"],"names":["React","Component","NavBar","Card","Dog","ReactCSSTransitionGroup","Offline","Online","CardState","HIDDING","SHOWING","MATCHING","MemoryGame","props","cards","id","cardState","HIDING","backgroundColor","backgroundImage","shuffle","state","noClick","isVis","isFin","width","timestart","undefined","attempts","duration","click","isMob","handleClick","bind","handleNewGame","getAllDogs","updatedWindowDimensions","mobileCheck","window","orientation","setState","innerWidth","filter","c","length","push","arr","i","j","temp","Math","floor","random","dogs","fetch","then","res","json","message","setTimeout","map","addEventListener","prevState","round","Date","getTime","mapCardState","idsToChange","newCardState","includes","foundCard","find","showingCards","ids","hidingCards","allMatching","console","log","classNames","require","loadClass","hide","show","warClass","hideWar","showWar","card","style","display"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,kBAAP;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,sBAAhC;AAEA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,OAAO,EAAE,CAFQ;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAAlB;;IAMqBC,U;;;;;AACpB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,oFAAMA,KAAN,GADkB,CAGlB;;AACA,QAAIC,KAAK,GAAG,CACX;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,KAAvD;AAA8DC,MAAAA,eAAe,EAAE;AAA/E,KADW,EAEX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,KAAvD;AAA8DC,MAAAA,eAAe,EAAE;AAA/E,KAFW,EAGX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,MAAvD;AAA+DC,MAAAA,eAAe,EAAE;AAAhF,KAHW,EAIX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,MAAvD;AAA+DC,MAAAA,eAAe,EAAE;AAAhF,KAJW,EAKX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,QAAvD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KALW,EAMX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,QAAvD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KANW,EAOX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,OAAvD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KAPW,EAQX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,OAAvD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KARW,EASX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,OAAvD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KATW,EAUX;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA9B;AAAsCC,MAAAA,eAAe,EAAE,OAAvD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KAVW,EAWX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,QAAxD;AAAkEC,MAAAA,eAAe,EAAE;AAAnF,KAXW,EAYX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,QAAxD;AAAkEC,MAAAA,eAAe,EAAE;AAAnF,KAZW,EAaX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,MAAxD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KAbW,EAcX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,MAAxD;AAAgEC,MAAAA,eAAe,EAAE;AAAjF,KAdW,EAeX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,UAAxD;AAAoEC,MAAAA,eAAe,EAAE;AAArF,KAfW,EAgBX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,UAAxD;AAAoEC,MAAAA,eAAe,EAAE;AAArF,KAhBW,EAiBX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,OAAxD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KAjBW,EAkBX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,OAAxD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KAlBW,EAmBX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,OAAxD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KAnBW,EAoBX;AAAEJ,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,MAAAA,eAAe,EAAE,OAAxD;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KApBW,CAAZ;AAuBAL,IAAAA,KAAK,GAAG,MAAKM,OAAL,CAAaN,KAAb,CAAR;AAEA,UAAKO,KAAL,GAAa;AACZP,MAAAA,KAAK,EAALA,KADY;AAEZQ,MAAAA,OAAO,EAAE,KAFG;AAGZC,MAAAA,KAAK,EAAE,IAHK;AAIZC,MAAAA,KAAK,EAAE,KAJK;AAKZC,MAAAA,KAAK,EAAE,CALK;AAMZC,MAAAA,SAAS,EAAEC,SANC;AAOZC,MAAAA,QAAQ,EAAED,SAPE;AAQZE,MAAAA,QAAQ,EAAEF,SARE;AASZG,MAAAA,KAAK,EAAE,CATK;AAUZC,MAAAA,KAAK,EAAE;AAVK,KAAb;AAaA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACA,UAAKb,OAAL,GAAe,MAAKA,OAAL,CAAaa,IAAb,uDAAf;AACA,UAAKG,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BH,IAA7B,uDAA/B;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,uDAAnB;AA/CkB;AAgDlB;;;;kCAEa;AACb,UAAI,OAAOK,MAAM,CAACC,WAAd,KAA8B,WAAlC,EAA+C;AAC9C,aAAKC,QAAL,CAAc;AACbT,UAAAA,KAAK,EAAE;AADM,SAAd;AAGA;AACD;;;8CAEyB;AACzB,UAAIO,MAAM,CAACG,UAAP,GAAoB,GAAxB,EAA6B;AAC5B,YAAI3B,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAX,CAAiB4B,MAAjB,CAAwB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACzB,eAAF,KAAsB,OAA7B;AAAA,SAAxB,CAAZ;AACA,aAAKsB,QAAL,CAAc;AACb1B,UAAAA,KAAK,EAALA,KADa;AAEbW,UAAAA,KAAK,EAAEa,MAAM,CAACG;AAFD,SAAd;AAIA,OAND,MAMO,IAAIH,MAAM,CAACG,UAAP,GAAoB,GAApB,IAA2B,KAAKpB,KAAL,CAAWP,KAAX,CAAiB8B,MAAjB,KAA4B,EAA3D,EAA+D;AACrE,YAAI9B,MAAK,GAAG,KAAKO,KAAL,CAAWP,KAAvB;;AACAA,QAAAA,MAAK,CAAC+B,IAAN,CACC;AAAE9B,UAAAA,EAAE,EAAE,EAAN;AAAUC,UAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,UAAAA,eAAe,EAAE,OAAxD;AAAiEC,UAAAA,eAAe,EAAE;AAAlF,SADD,EAEC;AAAEJ,UAAAA,EAAE,EAAE,EAAN;AAAUC,UAAAA,SAAS,EAAER,SAAS,CAACS,MAA/B;AAAuCC,UAAAA,eAAe,EAAE,OAAxD;AAAiEC,UAAAA,eAAe,EAAE;AAAlF,SAFD;;AAIA,aAAKqB,QAAL,CAAc;AAAE1B,UAAAA,KAAK,EAALA,MAAF;AAASW,UAAAA,KAAK,EAAEa,MAAM,CAACG;AAAvB,SAAd;AACA;AACD;;;4BAEOK,G,EAAK;AACZ,UAAIC,CAAJ,EAAOC,CAAP,EAAUC,IAAV;;AACA,WAAKF,CAAC,GAAGD,GAAG,CAACF,MAAJ,GAAa,CAAtB,EAAyBG,CAAC,GAAG,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AACpCC,QAAAA,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAJ;AACAE,QAAAA,IAAI,GAAGH,GAAG,CAACC,CAAD,CAAV;AACAD,QAAAA,GAAG,CAACC,CAAD,CAAH,GAASD,GAAG,CAACE,CAAD,CAAZ;AACAF,QAAAA,GAAG,CAACE,CAAD,CAAH,GAASC,IAAT;AACA;;AACD,aAAOH,GAAP;AACA;;;iCAEY;AAAA;;AACZ,UAAIO,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5BO,QAAAA,KAAK,CAAC,yCAAD,CAAL,CACEC,IADF,CACO,UAACC,GAAD;AAAA,iBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,SADP,EAEEF,IAFF,CAEO,UAACC,GAAD;AAAA,iBAASH,IAAI,CAACR,IAAL,CAAUW,GAAG,CAACE,OAAd,CAAT;AAAA,SAFP;AAGA;;AAEDC,MAAAA,UAAU,CAAC,YAAM;AAChB,YAAI7C,KAAK,GAAG,MAAI,CAACO,KAAL,CAAWP,KAAX,CAAiB8C,GAAjB,CAAqB,UAACjB,CAAD,EAAO;AACvC,kBAAQA,CAAC,CAACzB,eAAV;AACC,iBAAK,KAAL;AACC,uCAAYyB,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,MAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,QAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,OAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,OAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,QAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,MAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,UAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,OAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED,iBAAK,OAAL;AACC,uCAAYV,CAAZ;AAAexB,gBAAAA,eAAe,EAAEkC,IAAI,CAAC,CAAD;AAApC;;AAED;AACC,qBAAOV,CAAP;AAhCF;AAkCA,SAnCW,CAAZ;;AAoCA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAE1B,UAAAA,KAAK,EAALA,KAAF;AAASS,UAAAA,KAAK,EAAE;AAAhB,SAAd;AACA,OAtCS,EAsCP,IAtCO,CAAV;AAuCA;;;wCAEmB;AACnB,WAAKc,WAAL;AACA,WAAKF,UAAL;AACA,WAAKC,uBAAL;AACAE,MAAAA,MAAM,CAACuB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKzB,uBAAvC;AACA;;;oCAEe;AAAA;;AACf;AACA;AACA,WAAKI,QAAL,CAAc;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAoC,MAAAA,UAAU,CAAC,YAAM;AAChB,QAAA,MAAI,CAACnB,QAAL,CAAc;AAAEjB,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,OAFS,EAEP,IAFO,CAAV;AAGA,UAAIT,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAX,CAAiB8C,GAAjB,CAAqB,UAACjB,CAAD;AAAA,iCAC7BA,CAD6B;AAEhC3B,UAAAA,SAAS,EAAER,SAAS,CAACS;AAFW;AAAA,OAArB,CAAZ;AAKAH,MAAAA,KAAK,GAAG,KAAKM,OAAL,CAAaN,KAAb,CAAR;AAEA,WAAK0B,QAAL,CAAc;AACb1B,QAAAA,KAAK,EAALA,KADa;AAEbY,QAAAA,SAAS,EAAEC,SAFE;AAGbH,QAAAA,KAAK,EAAE,KAHM;AAIbK,QAAAA,QAAQ,EAAEF,SAJG;AAKbC,QAAAA,QAAQ,EAAED,SALG;AAMbG,QAAAA,KAAK,EAAE;AANM,OAAd;AASA,WAAKK,UAAL;AACA;;;gCAEWpB,E,EAAI;AAAA;;AACf;AACA;AACA,WAAKyB,QAAL,CAAc,UAACsB,SAAD,EAAYjD,KAAZ,EAAsB;AACnC,eAAO;AACNiB,UAAAA,KAAK,EAAEgC,SAAS,CAAChC,KAAV,GAAkB;AADnB,SAAP;AAGA,OAJD,EAHe,CAQf;;AACA,UAAI,KAAKT,KAAL,CAAWS,KAAX,KAAqB,CAAzB,EAA4B;AAC3B,aAAKU,QAAL,CAAc;AACbd,UAAAA,SAAS,EAAEwB,IAAI,CAACa,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC;AADE,SAAd;AAGA,OAbc,CAcf;AACA;;;AAEA,UAAMC,YAAY,GAAG,SAAfA,YAAe,CAACpD,KAAD,EAAQqD,WAAR,EAAqBC,YAArB,EAAsC;AAC1D,eAAOtD,KAAK,CAAC8C,GAAN,CAAU,UAACjB,CAAD,EAAO;AACvB,cAAIwB,WAAW,CAACE,QAAZ,CAAqB1B,CAAC,CAAC5B,EAAvB,CAAJ,EAAgC;AAC/B,qCACI4B,CADJ;AAEC3B,cAAAA,SAAS,EAAEoD;AAFZ;AAIA;;AACD,iBAAOzB,CAAP;AACA,SARM,CAAP;AASA,OAVD,CAjBe,CA4Bf;;;AAEA,UAAM2B,SAAS,GAAG,KAAKjD,KAAL,CAAWP,KAAX,CAAiByD,IAAjB,CAAsB,UAAC5B,CAAD;AAAA,eAAOA,CAAC,CAAC5B,EAAF,KAASA,EAAhB;AAAA,OAAtB,CAAlB,CA9Be,CAgCf;;AACA,UAAI,KAAKM,KAAL,CAAWC,OAAX,IAAsBgD,SAAS,CAACtD,SAAV,KAAwBR,SAAS,CAACS,MAA5D,EAAoE;AACnE;AACA;;AAED,UAAIK,OAAO,GAAG,KAAd,CArCe,CAuCf;;AACA,UAAIR,KAAK,GAAGoD,YAAY,CAAC,KAAK7C,KAAL,CAAWP,KAAZ,EAAmB,CAAEC,EAAF,CAAnB,EAA2BP,SAAS,CAACE,OAArC,CAAxB,CAxCe,CA0Cf;;AACA,UAAM8D,YAAY,GAAG1D,KAAK,CAAC4B,MAAN,CAAa,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC3B,SAAF,KAAgBR,SAAS,CAACE,OAAjC;AAAA,OAAb,CAArB,CA3Ce,CA6Cf;;AACA,UAAM+D,GAAG,GAAGD,YAAY,CAACZ,GAAb,CAAiB,UAACjB,CAAD;AAAA,eAAOA,CAAC,CAAC5B,EAAT;AAAA,OAAjB,CAAZ;;AAEA,UAAIyD,YAAY,CAAC5B,MAAb,KAAwB,CAAxB,IAA6B4B,YAAY,CAAC,CAAD,CAAZ,CAAgBtD,eAAhB,KAAoCsD,YAAY,CAAC,CAAD,CAAZ,CAAgBtD,eAArF,EAAsG;AACrGJ,QAAAA,KAAK,GAAGoD,YAAY,CAAC,KAAK7C,KAAL,CAAWP,KAAZ,EAAmB2D,GAAnB,EAAwBjE,SAAS,CAACG,QAAlC,CAApB;AACA,OAFD,MAEO,IAAI6D,YAAY,CAAC5B,MAAb,KAAwB,CAA5B,EAA+B;AACrC,YAAI8B,WAAW,GAAGR,YAAY,CAAC,KAAK7C,KAAL,CAAWP,KAAZ,EAAmB2D,GAAnB,EAAwBjE,SAAS,CAACS,MAAlC,CAA9B;AAEAK,QAAAA,OAAO,GAAG,IAAV;AAEA,aAAKkB,QAAL,CAAc;AAAE1B,UAAAA,KAAK,EAALA,KAAF;AAASQ,UAAAA,OAAO,EAAPA;AAAT,SAAd,EAAkC,YAAM;AACvCqC,UAAAA,UAAU,CAAC,YAAM;AAChB;AACA,YAAA,MAAI,CAACnB,QAAL,CAAc;AAAE1B,cAAAA,KAAK,EAAE4D,WAAT;AAAsBpD,cAAAA,OAAO,EAAE;AAA/B,aAAd;AACA,WAHS,EAGP,IAHO,CAAV;AAIA,SALD;AAMA,OA7Dc,CA8Df;;;AACA,UAAIqD,WAAW,GAAG7D,KAAK,CAAC4B,MAAN,CAAa,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC3B,SAAF,KAAgBR,SAAS,CAACG,QAAjC;AAAA,OAAb,CAAlB;;AACA,UAAIgE,WAAW,CAAC/B,MAAZ,KAAuB9B,KAAK,CAAC8B,MAAjC,EAAyC;AACxC,YAAIf,QAAQ,GAAGqB,IAAI,CAACa,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,IAA0C,KAAK5C,KAAL,CAAWK,SAApE;AACA,YAAIE,QAAQ,GAAGsB,IAAI,CAACa,KAAL,CAAW,KAAK1C,KAAL,CAAWS,KAAX,GAAmB,CAA9B,CAAf;AACA,aAAKU,QAAL,CACC;AACCX,UAAAA,QAAQ,EAARA,QADD;AAECD,UAAAA,QAAQ,EAARA,QAFD;AAGCJ,UAAAA,KAAK,EAAE;AAHR,SADD,EAMC,YAAM;AACLoD,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACxD,KAAL,CAAWQ,QAAvB;AACA+C,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACxD,KAAL,CAAWO,QAAvB;AACA,SATF;AAWA;;AACD,WAAKY,QAAL,CAAc;AAAE1B,QAAAA,KAAK,EAALA,KAAF;AAASQ,QAAAA,OAAO,EAAPA;AAAT,OAAd;AACA;;;6BAEQ;AAAA;;AACR,UAAIwD,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,UAAIC,SAAS,GAAGF,UAAU,CAAC,MAAD,EAAS;AAClCG,QAAAA,IAAI,EAAE,CAAC,KAAK5D,KAAL,CAAWE,KADgB;AAElC2D,QAAAA,IAAI,EAAE,KAAK7D,KAAL,CAAWE;AAFiB,OAAT,CAA1B;AAIA,UAAI4D,QAAQ,GAAGL,UAAU,CAAC;AACzBM,QAAAA,OAAO,EAAE,CAAC,KAAK/D,KAAL,CAAWU,KADI;AAEzBsD,QAAAA,OAAO,EAAE,KAAKhE,KAAL,CAAWU;AAFK,OAAD,CAAzB;AAKA,UAAMjB,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAX,CAAiB8C,GAAjB,CAAqB,UAAC0B,IAAD;AAAA,eAClC,oBAAC,IAAD;AACC,UAAA,GAAG,EAAEA,IAAI,CAACvE,EADX;AAEC,UAAA,OAAO,EAAEuE,IAAI,CAACtE,SAAL,KAAmBR,SAAS,CAACG,QAFvC;AAGC,UAAA,OAAO,EAAE2E,IAAI,CAACtE,SAAL,KAAmBR,SAAS,CAACS,MAHvC;AAIC,UAAA,eAAe,EAAEqE,IAAI,CAACpE,eAJvB;AAKC,UAAA,eAAe,EAAEoE,IAAI,CAACnE,eALvB;AAMC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACa,WAAL,CAAiBsD,IAAI,CAACvE,EAAtB,CAAN;AAAA,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,OAArB,CAAd;AAWA,UAAIwE,KAAK,GAAG,EAAZ;;AACA,UAAI,CAAC,KAAKlE,KAAL,CAAWE,KAAhB,EAAuB;AACtBgE,QAAAA,KAAK,CAACC,OAAN,GAAgB,MAAhB;AACA,OAFD,MAEO,IAAI,KAAKnE,KAAL,CAAWE,KAAf,EAAsB;AAC5BgE,QAAAA,KAAK,CAACC,OAAN,GAAgB,MAAhB;AACA;;AAED,aACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,SAAS,EAAE,KAAKtD,aADjB;AAEC,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,KAFnB;AAGC,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWQ,QAHtB;AAIC,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWO,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAOC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE2D,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEzE,KADF,CADD,CAPD,EAYC;AAAK,QAAA,SAAS,EAAEkE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,uBAAD;AACC,QAAA,cAAc,EAAC,MADhB;AAEC,QAAA,gBAAgB,EAAE,IAFnB;AAGC,QAAA,uBAAuB,EAAE,GAH1B;AAIC,QAAA,sBAAsB,EAAE,GAJzB;AAKC,QAAA,sBAAsB,EAAE,GALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CADD,CAZD,EAuBC;AAAK,QAAA,SAAS,EAAEG,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAC6B;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD7B,WACgE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADhE,CADD,CAvBD,EA4BC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DACiD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADjD,WACoF;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADpF,CADD,CADD,CA5BD,CADD;AAsCA;;;;EA9TsClF,S;;SAAnBW,U","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Card from './Card';\nimport Dog from './Dog';\nimport './MemoryGame.css';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { Offline, Online } from 'react-detect-offline';\n\nconst CardState = {\n\tHIDDING: 0,\n\tSHOWING: 1,\n\tMATCHING: 2\n};\n\nexport default class MemoryGame extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t//the cards I'm using for my state\n\t\tlet cards = [\n\t\t\t{ id: 0, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: '' },\n\t\t\t{ id: 1, cardState: CardState.HIDING, backgroundColor: 'red', backgroundImage: '' },\n\t\t\t{ id: 2, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: '' },\n\t\t\t{ id: 3, cardState: CardState.HIDING, backgroundColor: 'navy', backgroundImage: '' },\n\t\t\t{ id: 4, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: '' },\n\t\t\t{ id: 5, cardState: CardState.HIDING, backgroundColor: 'yellow', backgroundImage: '' },\n\t\t\t{ id: 6, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: '' },\n\t\t\t{ id: 7, cardState: CardState.HIDING, backgroundColor: 'green', backgroundImage: '' },\n\t\t\t{ id: 8, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: '' },\n\t\t\t{ id: 9, cardState: CardState.HIDING, backgroundColor: 'black', backgroundImage: '' },\n\t\t\t{ id: 10, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: '' },\n\t\t\t{ id: 11, cardState: CardState.HIDING, backgroundColor: 'purple', backgroundImage: '' },\n\t\t\t{ id: 12, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: '' },\n\t\t\t{ id: 13, cardState: CardState.HIDING, backgroundColor: 'pink', backgroundImage: '' },\n\t\t\t{ id: 14, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: '' },\n\t\t\t{ id: 15, cardState: CardState.HIDING, backgroundColor: 'lightsky', backgroundImage: '' },\n\t\t\t{ id: 16, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: '' },\n\t\t\t{ id: 17, cardState: CardState.HIDING, backgroundColor: 'brown', backgroundImage: '' },\n\t\t\t{ id: 18, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' },\n\t\t\t{ id: 19, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' }\n\t\t];\n\n\t\tcards = this.shuffle(cards);\n\n\t\tthis.state = {\n\t\t\tcards,\n\t\t\tnoClick: false,\n\t\t\tisVis: true,\n\t\t\tisFin: false,\n\t\t\twidth: 0,\n\t\t\ttimestart: undefined,\n\t\t\tattempts: undefined,\n\t\t\tduration: undefined,\n\t\t\tclick: 0,\n\t\t\tisMob: false\n\t\t};\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleNewGame = this.handleNewGame.bind(this);\n\t\tthis.getAllDogs = this.getAllDogs.bind(this);\n\t\tthis.shuffle = this.shuffle.bind(this);\n\t\tthis.updatedWindowDimensions = this.updatedWindowDimensions.bind(this);\n\t\tthis.mobileCheck = this.mobileCheck.bind(this);\n\t}\n\n\tmobileCheck() {\n\t\tif (typeof window.orientation !== 'undefined') {\n\t\t\tthis.setState({\n\t\t\t\tisMob: true\n\t\t\t});\n\t\t}\n\t}\n\n\tupdatedWindowDimensions() {\n\t\tif (window.innerWidth < 520) {\n\t\t\tlet cards = this.state.cards.filter((c) => c.backgroundColor !== 'white');\n\t\t\tthis.setState({\n\t\t\t\tcards,\n\t\t\t\twidth: window.innerWidth\n\t\t\t});\n\t\t} else if (window.innerWidth > 520 && this.state.cards.length !== 20) {\n\t\t\tlet cards = this.state.cards;\n\t\t\tcards.push(\n\t\t\t\t{ id: 18, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' },\n\t\t\t\t{ id: 19, cardState: CardState.HIDING, backgroundColor: 'white', backgroundImage: '' }\n\t\t\t);\n\t\t\tthis.setState({ cards, width: window.innerWidth });\n\t\t}\n\t}\n\n\tshuffle(arr) {\n\t\tvar i, j, temp;\n\t\tfor (i = arr.length - 1; i > 0; i--) {\n\t\t\tj = Math.floor(Math.random() * (i + 1));\n\t\t\ttemp = arr[i];\n\t\t\tarr[i] = arr[j];\n\t\t\tarr[j] = temp;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tgetAllDogs() {\n\t\tlet dogs = [];\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tfetch('https://dog.ceo/api/breeds/image/random')\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((res) => dogs.push(res.message));\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tlet cards = this.state.cards.map((c) => {\n\t\t\t\tswitch (c.backgroundColor) {\n\t\t\t\t\tcase 'red':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[0] };\n\n\t\t\t\t\tcase 'navy':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[1] };\n\n\t\t\t\t\tcase 'yellow':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[2] };\n\n\t\t\t\t\tcase 'green':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[3] };\n\n\t\t\t\t\tcase 'black':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[4] };\n\n\t\t\t\t\tcase 'purple':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[5] };\n\n\t\t\t\t\tcase 'pink':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[6] };\n\n\t\t\t\t\tcase 'lightsky':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[7] };\n\n\t\t\t\t\tcase 'brown':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[8] };\n\n\t\t\t\t\tcase 'white':\n\t\t\t\t\t\treturn { ...c, backgroundImage: dogs[9] };\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setState({ cards, isVis: false });\n\t\t}, 3000);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mobileCheck();\n\t\tthis.getAllDogs();\n\t\tthis.updatedWindowDimensions();\n\t\twindow.addEventListener('resize', this.updatedWindowDimensions);\n\t}\n\n\thandleNewGame() {\n\t\t// 1.copy all state and set all cards to state of hiding\n\t\t// 2.shuffle the cards\n\t\tthis.setState({ isVis: true });\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ isVis: false });\n\t\t}, 3000);\n\t\tlet cards = this.state.cards.map((c) => ({\n\t\t\t...c,\n\t\t\tcardState: CardState.HIDING\n\t\t}));\n\n\t\tcards = this.shuffle(cards);\n\n\t\tthis.setState({\n\t\t\tcards,\n\t\t\ttimestart: undefined,\n\t\t\tisFin: false,\n\t\t\tduration: undefined,\n\t\t\tattempts: undefined,\n\t\t\tclick: 0\n\t\t});\n\n\t\tthis.getAllDogs();\n\t}\n\n\thandleClick(id) {\n\t\t// console.log(Math.round(new Date().getTime()/1000))\n\t\t//adding click\n\t\tthis.setState((prevState, props) => {\n\t\t\treturn {\n\t\t\t\tclick: prevState.click + 1\n\t\t\t};\n\t\t});\n\t\t//adding first clikc timestamp\n\t\tif (this.state.click === 1) {\n\t\t\tthis.setState({\n\t\t\t\ttimestart: Math.round(new Date().getTime() / 1000)\n\t\t\t});\n\t\t}\n\t\t// 1.if two cards are visible and they don't match, put back\n\t\t// 2.if two cards are visible and they match, they should stay\n\n\t\tconst mapCardState = (cards, idsToChange, newCardState) => {\n\t\t\treturn cards.map((c) => {\n\t\t\t\tif (idsToChange.includes(c.id)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...c,\n\t\t\t\t\t\tcardState: newCardState\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t});\n\t\t};\n\t\t//grabbing the card we want out of the array\n\n\t\tconst foundCard = this.state.cards.find((c) => c.id === id);\n\n\t\t//prevents flipping card if it's noClick || matching || showing\n\t\tif (this.state.noClick || foundCard.cardState !== CardState.HIDING) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet noClick = false;\n\n\t\t//filters all cards, but one that's clicke has SHOWING now\n\t\tlet cards = mapCardState(this.state.cards, [ id ], CardState.SHOWING);\n\n\t\t//finds only cards with SHOWING\n\t\tconst showingCards = cards.filter((c) => c.cardState === CardState.SHOWING);\n\n\t\t//grabbing ids from showingCards\n\t\tconst ids = showingCards.map((c) => c.id);\n\n\t\tif (showingCards.length === 2 && showingCards[0].backgroundColor === showingCards[1].backgroundColor) {\n\t\t\tcards = mapCardState(this.state.cards, ids, CardState.MATCHING);\n\t\t} else if (showingCards.length === 2) {\n\t\t\tlet hidingCards = mapCardState(this.state.cards, ids, CardState.HIDING);\n\n\t\t\tnoClick = true;\n\n\t\t\tthis.setState({ cards, noClick }, () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// set the state of the cards to HIDING after 1.5 seconds\n\t\t\t\t\tthis.setState({ cards: hidingCards, noClick: false });\n\t\t\t\t}, 1200);\n\t\t\t});\n\t\t}\n\t\t//check for the game end\n\t\tlet allMatching = cards.filter((c) => c.cardState === CardState.MATCHING);\n\t\tif (allMatching.length === cards.length) {\n\t\t\tlet duration = Math.round(new Date().getTime() / 1000) - this.state.timestart;\n\t\t\tlet attempts = Math.round(this.state.click / 2);\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tduration,\n\t\t\t\t\tattempts,\n\t\t\t\t\tisFin: true\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tconsole.log(this.state.duration);\n\t\t\t\t\tconsole.log(this.state.attempts);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tthis.setState({ cards, noClick });\n\t}\n\n\trender() {\n\t\tvar classNames = require('classnames');\n\t\tvar loadClass = classNames('load', {\n\t\t\thide: !this.state.isVis,\n\t\t\tshow: this.state.isVis\n\t\t});\n\t\tvar warClass = classNames({\n\t\t\thideWar: !this.state.isMob,\n\t\t\tshowWar: this.state.isMob\n\t\t});\n\n\t\tconst cards = this.state.cards.map((card) => (\n\t\t\t<Card\n\t\t\t\tkey={card.id}\n\t\t\t\topacity={card.cardState === CardState.MATCHING}\n\t\t\t\tshowing={card.cardState !== CardState.HIDING}\n\t\t\t\tbackgroundColor={card.backgroundColor}\n\t\t\t\tbackgroundImage={card.backgroundImage}\n\t\t\t\tonClick={() => this.handleClick(card.id)}\n\t\t\t/>\n\t\t));\n\n\t\tlet style = {};\n\t\tif (!this.state.isVis) {\n\t\t\tstyle.display = 'grid';\n\t\t} else if (this.state.isVis) {\n\t\t\tstyle.display = 'none';\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<NavBar\n\t\t\t\t\tonNewGame={this.handleNewGame}\n\t\t\t\t\tisFin={this.state.isFin}\n\t\t\t\t\tduration={this.state.duration}\n\t\t\t\t\tattempts={this.state.attempts}\n\t\t\t\t/>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"cardsContainer\" style={style}>\n\t\t\t\t\t\t{cards}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={loadClass}>\n\t\t\t\t\t<ReactCSSTransitionGroup\n\t\t\t\t\t\ttransitionName=\"todo\"\n\t\t\t\t\t\ttransitionAppear={true}\n\t\t\t\t\t\ttransitionAppearTimeout={500}\n\t\t\t\t\t\ttransitionEnterTimeout={500}\n\t\t\t\t\t\ttransitionLeaveTimeout={500}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Dog />\n\t\t\t\t\t</ReactCSSTransitionGroup>\n\t\t\t\t</div>\n\t\t\t\t<div className={warClass}>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tTurn device in portrait mode<span className=\"exc\">!</span> Woof<span className=\"exc\">!</span>\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<Offline>\n\t\t\t\t\t<div className=\"showConn\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tThere is a problem with your internet connection<span className=\"exc\">!</span> Woof<span className=\"exc\">!</span>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</Offline>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}