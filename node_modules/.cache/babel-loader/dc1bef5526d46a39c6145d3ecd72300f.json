{"ast":null,"code":"import _classCallCheck from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ante/Documents/projects/memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ante/Documents/projects/memory/src/MemoryGame.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'shuffle-array';\nimport NavBar from './NavBar';\nimport Card from './Card';\nvar CardState = {\n  HIDDING: 0,\n  SHOWING: 1,\n  MATCHING: 2\n};\n\nvar MemoryGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemoryGame, _Component);\n\n  function MemoryGame(props) {\n    var _this;\n\n    _classCallCheck(this, MemoryGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemoryGame).call(this, props)); //the cards I'm using for my state\n\n    var cards = [{\n      id: 0,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red'\n    }, {\n      id: 1,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red'\n    }, {\n      id: 2,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy'\n    }, {\n      id: 3,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy'\n    }, {\n      id: 4,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow'\n    }, {\n      id: 5,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow'\n    }, {\n      id: 6,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green'\n    }, {\n      id: 7,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green'\n    }, {\n      id: 8,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black'\n    }, {\n      id: 9,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black'\n    }, {\n      id: 10,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple'\n    }, {\n      id: 11,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple'\n    }, {\n      id: 12,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink'\n    }, {\n      id: 13,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink'\n    }, {\n      id: 14,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightsky'\n    }, {\n      id: 15,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightsky'\n    }];\n    cards = shuffle(cards);\n    _this.state = {\n      cards: cards,\n      noClick: false\n    };\n    return _this;\n  }\n\n  _createClass(MemoryGame, [{\n    key: \"render\",\n    value: function render() {\n      var cards = this.state.cards.map(function (card) {\n        return React.createElement(Card, {\n          key: card.id,\n          showing: false,\n          backgroundColor: card.backgroundColor,\n          onClick: function onClick() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), cards);\n    }\n  }]);\n\n  return MemoryGame;\n}(Component);\n\nexport { MemoryGame as default };","map":{"version":3,"sources":["/Users/ante/Documents/projects/memory/src/MemoryGame.js"],"names":["React","Component","shuffle","NavBar","Card","CardState","HIDDING","SHOWING","MATCHING","MemoryGame","props","cards","id","cardState","HIDING","backgroundColor","state","noClick","map","card"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport shuffle from 'shuffle-array';\nimport NavBar from './NavBar';\nimport Card from './Card';\n\n\nconst CardState = {\n    HIDDING: 0,\n    SHOWING: 1, \n    MATCHING: 2\n}\n\nexport default class MemoryGame extends Component {\n    constructor(props) {\n        super(props);\n\n\n        //the cards I'm using for my state\n        let cards = [\n            {id: 0, cardState: CardState.HIDING, backgroundColor: 'red'},\n            {id: 1, cardState: CardState.HIDING, backgroundColor: 'red'},\n            {id: 2, cardState: CardState.HIDING, backgroundColor: 'navy'},\n            {id: 3, cardState: CardState.HIDING, backgroundColor: 'navy'},\n            {id: 4, cardState: CardState.HIDING, backgroundColor: 'yellow'},\n            {id: 5, cardState: CardState.HIDING, backgroundColor: 'yellow'},\n            {id: 6, cardState: CardState.HIDING, backgroundColor: 'green'},\n            {id: 7, cardState: CardState.HIDING, backgroundColor: 'green'},\n            {id: 8, cardState: CardState.HIDING, backgroundColor: 'black'},\n            {id: 9, cardState: CardState.HIDING, backgroundColor: 'black'},\n            {id: 10, cardState: CardState.HIDING, backgroundColor: 'purple'},\n            {id: 11, cardState: CardState.HIDING, backgroundColor: 'purple'},\n            {id: 12, cardState: CardState.HIDING, backgroundColor: 'pink'},\n            {id: 13, cardState: CardState.HIDING, backgroundColor: 'pink'},\n            {id: 14, cardState: CardState.HIDING, backgroundColor: 'lightsky'},\n            {id: 15, cardState: CardState.HIDING, backgroundColor: 'lightsky'}\n        ];\n\n        cards = shuffle(cards);\n        this.state = {\n            cards, noClick: false\n        };\n    }\n\n    render() {\n        const cards = this.state.cards.map((card) => (\n            <Card \n                key={card.id} \n                showing={false} \n                backgroundColor={card.backgroundColor} \n                onClick={() => {}}\n            />\n        ));\n\n        return (\n            <div>\n                <NavBar />\n                {cards}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}